# Generated by Django 4.2.7 on 2024-02-24 15:11

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("restaurant", "0005_alter_restaurant_closing_time_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique ID",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                ("code", models.CharField(help_text="Unique Code", max_length=120)),
                ("name", models.CharField(max_length=20)),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            ("food", "food"),
                            ("drink", "drink"),
                            ("alcohol", "alcohol"),
                            ("victuals", "victuals"),
                        ],
                        default="food",
                        help_text="Select a Item Type",
                        verbose_name="Item Type",
                    ),
                ),
                (
                    "meal_type",
                    models.CharField(
                        choices=[
                            ("daily food", "daily food"),
                            ("fast food", "fast food"),
                            ("snacks", "snacks"),
                            ("burgers", "burgers"),
                            ("meat", "meat"),
                            ("fish", "fish"),
                            ("beverage", "beverage"),
                            ("dessert", "dessert"),
                            ("kebab", "kebab"),
                            ("alcohol", "alcohol"),
                        ],
                        default="fast food",
                        help_text="Select a Meal Type",
                        verbose_name="Meal Type",
                    ),
                ),
                (
                    "meal_state",
                    models.CharField(
                        choices=[
                            ("hot", "hot"),
                            ("cold", "cold"),
                            ("normal", "normal"),
                        ],
                        default="hot",
                        help_text="Select a Meal State",
                        verbose_name="Meal State",
                    ),
                ),
                (
                    "meal_flavor",
                    models.CharField(
                        choices=[
                            ("sweet", "sweet"),
                            ("spicy", "spicy"),
                            ("salty", "salty"),
                            ("sour", "sour"),
                            ("bitter", "bitter"),
                            ("savory", "savory"),
                        ],
                        default="sweet",
                        help_text="Select a Meal Flavor",
                        verbose_name="Meal Flavor",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Set a Item Price",
                        max_digits=15,
                        verbose_name="Price of Item",
                    ),
                ),
                (
                    "max_order_qty",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Set a Max order Qty",
                        max_digits=5,
                        verbose_name="Max Order Qty",
                    ),
                ),
                (
                    "min_order_qty",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Set a Min order Qty",
                        max_digits=5,
                        verbose_name="Min Order Qty",
                    ),
                ),
                (
                    "discount_rate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Set a discount rate",
                        max_digits=5,
                        verbose_name="Discount Rate",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "active"),
                            ("inactive", "inactive"),
                            ("obsolete", "obsolete"),
                            ("waiting", "waiting"),
                            ("deleted", "deleted"),
                        ],
                        default="active",
                        help_text="Select a Item Status",
                        verbose_name="Item Status",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        help_text="Select a Restaurant",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="item_restaurant",
                        to="restaurant.restaurant",
                        verbose_name="Restaurant",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
